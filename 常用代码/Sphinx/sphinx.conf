#MySQL数据源配置，详情请查看：http://www.coreseek.cn/products-install/mysql/
#请先将var/test/documents.sql导入数据库，并配置好以下的MySQL用户密码数据库

#源定义
source mydata
{
    type                    = mysql

    sql_host                = localhost
    sql_user                = root
    sql_pass                = fangxinjia888
    sql_db                    = fangxinjia_sku
    sql_port                = 3306
    sql_query_pre            = SET NAMES utf8
    
	# 获得mysql 数据库的数据，以便sphinx制作索引
	# id  必须要配置 主键 
    sql_query                = SELECT product_id,product_name,code,series,version,size,weight,features,color,camber,unit,material,style,production_area,set_meal,keys_num,hooks_num,socket_type,rated_current,environmental_protection_class,`describe`,product_name_letter FROM product
                                                              #sql_query第一列id需为整数
    # 创建主索引后要更新markid字段(把已经创建索引的记录的最大主键id存储给markid字段)                                                          #title、content作为字符串/文本字段，被全文索引
	# sql_query_post 			 = update flag set markid=(select max(id) from product)
	
}

#index 索引文件定义
index test1
{
    source            = mydata            #对应的source名称
    path            = E:/sphinx/var/test1 #生成索引的存放为位置,product 为索引名称
													 #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/product
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
	min_infix_len 		= 1
    html_strip                = 0

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    # charset_dictpath = /usr/local/mmseg3/etc/		   #BSD、Linux环境下设置，/符号结尾
    charset_dictpath = E:/sphinx/etc/                           #Windows环境下设置，/符号结尾，最好给出绝对路径，例如：C:/usr/local/coreseek/etc/...
    charset_type        = zh_cn.utf-8
}

#增量索引数据源
source myproductnew
{
    type                    = mysql

    sql_host                = localhost
    sql_user                = root
    sql_pass                = fangxinjia888
    sql_db                  = fangxinjia_sku
    sql_port                = 3306
    sql_query_pre           = SET NAMES utf8
    
	# 获得mysql 数据库的数据，以便sphinx制作索引
	# 获取新增的记录信息创建索引
    sql_query                = SELECT * FROM product where id>(select markid from flag)
								#和第一个索引搜索条件保持一致，但给个大于原索引id的搜索条件                                                          #title、content作为字符串/文本字段，被全文索引
	# 创建增量索引后要更新markid字段(把已经创建索引的记录的最大主键id存储给markid字段)
	sql_query_post 			 = update flag set markid=(select max(id) from product)
}

#index 【增量索引】文件定义
index productnew
{
    source            = myproductnew            #对应的source名称
    path            = usr/local/coreseek/var/productnew #生成索引的存放为位置,product 为索引名称
													 #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/product
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
    html_strip                = 0

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    charset_dictpath = /usr/local/mmseg3/etc/		   #BSD、Linux环境下设置，/符号结尾
    #charset_dictpath = etc/                           #Windows环境下设置，/符号结尾，最好给出绝对路径，例如：C:/usr/local/coreseek/etc/...
    charset_type        = zh_cn.utf-8
}


#全局index定义
indexer
{
    mem_limit            = 128M
}

#searchd服务定义
searchd
{
    listen                  =   9312
    read_timeout        = 5
    max_children        = 30
    max_matches            = 1000
    seamless_rotate        = 0
    preopen_indexes        = 0
    unlink_old            = 1
    #pid_file = var/log/searchd_mysql.pid  #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    #log = var/log/searchd_mysql.log        #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    #query_log = var/log/query_mysql.log #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    pid_file = E:/sphinx/var/log/searchd_mysql.pid  #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    log = E:/sphinx/var/log/searchd_mysql.log        #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    query_log = E:/sphinx/var/log/query_mysql.log #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
}