php7和php5的区别

    性能提升了两倍
    
    try...catch增加了多条件判断，更多Error错误可以异常处理
    
    增加了匿名类，现在支持通过new class来实例化一个匿名类，这可以用来替代一些'用后即焚'的完整类定义

    增加了标量类型声明、返回类型声明
        定义参数类型和返回值类型
            function test(int $a):int
            {}
            如果不按规定传参会返回异常

    增加了结合比较运算符(<=>)
        当$a小于、等于或大于$b时它分别返回-1、0或1。
            $a <=> $b

    通过 define() 定义常量数组
        define('ANIMALS', ['dog','cat','bird']);


php7比php5性能提升的原因
    变量字节减少，减少内存占用，提升变量操作速度
    改善数组结构，数组元素和hash映射表被分配在同一块内存里，降低了内存占用、提升了CPU缓存命中率
    改进了函数的调用机制，通过优化参数传递的环节，减少了一些指令，提高执行效率

简述php的垃圾回收机制
    php5.3之前都是采用引用计数的方式管理内存，php所有的变量存在一个叫zval的变量容器中，
当变量被引用的时候，引用计数会+1，变量引用计数变为0时，PHP将在内存中销毁这个变量
    但是引入计数的循环引入，引入计数不会消减为0，就会内存泄露
    在5.3版本之后，做了这些优化：
        1.并不是每次引入计数减少时都进入回收周期，只有根缓冲区满额后再开始垃圾回收
        2.可以解决循环引入问题
        3.可以总讲内存泄露保持在一个阈值以下

解决php内存溢出问题
    1.增大php脚本的内存分配
    2.变量引用之后及时销毁
    3.将数据分批处理

Redis、Memcached 这两者区别
    1.Redis支持更加丰富的数据存储类型，String、Hash、List、Set和Sorted Set
        Memcached仅支持简单的key-value结构
    2.Memcached key-value存储比Redis采用hash结构来做key-value存储的内存利用率更高
    3.Redis提供了事务的功能，可以保证一系列命名的原子性
    4.Redis支持数据的持久化，可以将内存中的数据保持在磁盘中
    5.Redis只使用单核，而Memcached可以使用多核，所以平均每一个核上Redis在存储小数据时比Memcached性能更高

Redis实现持久化
    1.RDB 持久化，讲Redis在内存中的状态保存到硬盘中，相当于备份数据库状态
    2.AOF 持久化，AOF持久化是通过保存Redis服务器锁执行的写状态来记录数据库的。相当于备份数据库收到的命令，
        所有被写入AOF的命令都是以Redis的协议格式来保存的

php运行机制
    PHP总共有三个模块：内核、Zend引擎、以及扩展层；

    PHP从下到上是一个4层体系：
        zend引擎：Zend整体用纯C实现，是PHP的内核部分，它将PHP代码翻译（词法、语法解析等一系列编译过程）为可执行opcode的处理并实现相应的处理方法、
            实现了基本的数据结构（如hashtable、oo）、内存分配及管理、提供了相应的api方法供外部调用，是一切的核心，所有的外围功能均围绕Zend实现。

        Extensions：围绕着Zend引擎，extensions通过组件式的方式提供各种基础服务，我们常见的各种内置函数（如array系列）、标准库等都是通过extension来实现，
            用户也可以根据需要实现自己的extension以达到功能扩展、性能优化等目的（如贴吧正在使用的PHP中间层、富文本解析就是extension的典型应用）。

        Sapi：服务端应用编程接口，Sapi通过一系列钩子函数，使得PHP可以和外围交互数据，这是PHP非常优雅和成功的一个设计，通过sapi成功的将PHP本身和上层应用解耦隔离，
            PHP可以不再考虑如何针对不同应用进行兼容，而应用本身也可以针对自己的特点实现不同的处理方式。

        上层应用：
            这就是我们平时编写的PHP程序，通过不同的sapi方式得到各种各样的应用模式，如通过webserver实现web应用、在命令行下以脚本方式运行等等。

php加速器
    php加速器是一个为了提高php执行效率，从而缓存起php的操作码，这样php后面执行就不必解析转换了，可以
    直接调用php操作码，这样速度上就提高了不少

    三个免费常用的加速器
        APC、eAccelerator、XCache

    PHP加速器比较结果总结

         1、通过测试得出eAccelerator在请求时间和内存占用综合方面是最好的。

         2、通过测试得出使用加速器比无加速器在请求时间快了3倍左右。

         3、通过各个官方观察，XCache是更新最快的，这也说明最有发展的。


mysql与mysqli的区别
    mysqli连接是永久连接，而mysql是非永久连接
    mysql连接：每当第二次使用的时候，都会重新开一个新的进程
    mysqli连接：一直使用同一个进程
    好处：这样可以很大程度的减轻服务端压力


Redis的优点和缺点
优点：
    1.数据存放在内存中，读写速度很快，采用单线程结构，
    防止因多线程竞争可能出现的问题和消耗

    2.数据类型丰富，五种基础数据类型，并且有很多很有用的扩展数据类型
    如：位图，HyperLogLog，发布订阅，GEO等。

    3.功能丰富，提供键过期，简单事务，Lua脚本管理，Pipeline等功能

    4.数据可持久化，可通过RDB和AOF两种方式进行数据持久化

    5.提供主从复制，可利用集群，哨兵构建搞可用的分布式架构

缺点：
    1.不具备自动容错和恢复功能

    2.主动宕机，宕机未同步到从机的数据无法恢复

    3.主从复制采用全量复制，若快照文件过大，对集群的服务能力会产生较大影响

    4.难以支持在线扩容


为什么 PHP7 比 PHP5 性能提升了？
    变量存储字节减小，减少内存占用，提升变量操作速度
    改善数组结构，数组元素和 hash 映射表被分配在同一块内存里，降低了内存占用、提升了 cpu 缓存命中率
    改进了函数的调用机制，通过优化参数传递的环节，减少了一些指令，提高执行效率

PHP7 和 PHP5 的区别，具体多了哪些新特性？
    性能提升了两倍
    结合比较运算符 (<=>)
    标量类型声明
    返回类型声明
    try...catch 增加多条件判断，更多 Error 错误可以进行异常处理
    匿名类，现在支持通过new class 来实例化一个匿名类，这可以用来替代一些“用后即焚”的完整类定义

Cookie 存在哪？
    如果设置了过期时间，Cookie存在硬盘里
    没有设置过期时间，Cookie存在内存里

Cookie和SESSION的区别和关系
    1.Cookie保存在客户端，而session则保存在服务器端
    2.从安全性讲，SESSION的安全性更高
    3.从保存内容的类型的角度来讲，cookie只保存字符串(及能够自动转换成字符串)
    4.从保存内容的大小来看，Cookie保存的内容是有限的，比较小，而SESSION基本上没有这个限制
    5.从性能给的角度来讲，用session的话，对服务器的压力会更大一点
    6.SESSION依赖于COOKIE，但如果禁用COOKIE，也可以通过url传递

php进程间通信的几种方式
    消息队列
    信号量+共享内存
    信号
    管道
    socket

php类的静态调用和实例化调用各自的利弊
    静态方法是类中的一个成员方法，属于整个类，即使不用创建任何对象也可以直接调用！静态方法效率上要比实例化高，静态方法的缺点是不自动销毁，而实例化的则可以做销毁。

网页/应用访问慢突然变慢，如何定位问题
    top、iostat查看cpu、内存及io占用情况
    内核、程序参数设置不合理 查看有没有报内核错误，连接数用户打开文件数这些有没有达到上限等等
    链路本身慢 是否跨运营商、用户上下行带宽不够、dns解析慢、服务器内网广播风暴什么的
    程序设计不合理 是否程序本身算法设计太差，数据库语句太过复杂或者刚上线了什么功能引起的
    其它关联的程序引起的 如果要访问数据库，检查一下是否数据库访问慢
    是否被攻击了 查看服务器是否被DDos了等等
    硬件故障 这个一般直接服务器就挂了，而不是访问慢

如何设计/优化一个访问量比较大的博客/论坛
    减少http请求(比如使用雪碧图)
    优化数据库(范式、SQL语句、索引、配置、读写分离)
    缓存使用(Memcache、Redis)
    负载均衡
    动态内容静态化+CDN
    禁止外部盗链(refer、图片添加水印)
    控制大文件下载
    使用集群







