Mysql事务的特征
    ACID，即原子性、一致性、隔离性、持久性
    原子性：
        将一组操作组合成原子操作，只有所有操作都成功才算成功，否则只要有一个操作失败，就全部失败
    一致性：
        事务必须保证系统处于一致性状态，不管事务如何交织并发执行。保证以下几条
            1.如果一个操作触发了间接行为，那么间接行为也必须成功，否则事务失败
            2.如果一个系统包含多个数据节点，那么一致性强制要求修改必须传播到所有节点
            3.虽然事务可以并行执行，单系统好像在串行执行事务一样，即与串行执行事务导致的最终系统状态是一样的
    隔离性：
        隔离性保证一个事务中未提交的修改对外界不可见。隔离性通过锁机制达到
    持久性：
        一个成功的事务必须永久改变系统的状态，在事务执行结束之前状态改变被记录在事务日志中。这样万一系统崩溃或断电，未完成的事务也可以回放。

sql规范定义的事务的隔离级别：
    1.READ UNCOMMITTED(读取未提交内容)

    2.READ COMMITTED(读取提交内容)

    3.REPEATABLE READ(可重复读)
        这是MySQL的默认事务隔离级别，它确保同一事务的多个实例在并发读取数据时，会看到同样的数据行。
        不过理论上，这会导致另一个棘手的问题：幻读 （Phantom Read）。
        简单的说，幻读指当用户读取某一范围的数据行时，另一个事务又在该范围内插入了新行，当用户再读取该范围的数据行时，会发现有新的“幻影” 行。
        InnoDB和Falcon存储引擎通过多版本并发控制（MVCC，Multiversion Concurrency Control）机制解决了该问题。

    4.SERIALIZABLE(可串行化)

mysql加锁机制
    共享锁、
        允许一个事务去读一行，阻止其他事务获得相同数据集的排它锁
    排它锁、
        允许获得排他锁的事务更新数据，阻止其他事务取得相同数据集的共享读锁和排他写锁。


mysql提供了3种事务型存储引擎
    InnDB、NDB Cluster和Falcon。

mysql设计三大范式
    第一范式：
        数据表的每一列(每个字段)必须是不可拆分的最小单元，也就是确保每一列的原子性
    第二范式：
        满足1NF后，要求表的所有列，都必须依赖于主键，而不能有任何一列与主键没有关系，也就是说一个表只描述一件事情
    第三范式：
        必须满足2NF，要求：表中的每一列只与主键直接相关而不是间接相关

创建表的第一字段是什么
    ID

索引的类型
  普通索引：最基本的索引，没有任何约束限制
  唯一索引：与普通索引类似，但是具有唯一性约束 （一个表可以有多个唯一索引）
  主键索引：特殊的唯一索引，不允许有空值 （一个表只能有一个主键索引， 主键还可以与外键构成参照完整性约束，反正数据不一致，而唯一索引不行）
  组合索引：将多个列组合在一起创建索引，可以覆盖多个列
  外键索引：只有 InnoDB 类型的表才能使用外键索引，保证数据的一致性，完整性和实现级联操作
  全文索引：只能对英文进行全文检索，mysql 5.6 版本以前只能由于MyISAM，5.6版本以后InnoDB 也可以使用

索引对性能的影响
    大大减少服务器对数据的扫描量
    帮助服务器避免排序和临时表
    将随机IO变成顺序IO
    大大提高查询速率，但会降低写的速度，并占用磁盘

索引的使用场景
    对于非常小的表，来说，大部分情况下不使用索引，全盘扫描效率会更加的高
    中到大型表，索引非常有效
    特大型的表，建立和使用索引的代价会随之增加，可以使用分区技术来解决

索引的创建原则
    最适合索引的列是出现在WHERE子句当中的列，或连接子句中的列而不是出现在SELECT关键字后的列
    索引列的基数越大，索引的效果越好
    对字符串进行索引，应制定一个前缀长度，可以节省大量的索引空间
    根据情况创建复合索引，复合索引可以提高查询效率
    避免创建过多的索引，索引会额外的占用磁盘空间，降低写操作效率
    主键尽可能选择较短的数据类型，可以有效的减少索引的磁盘占用，提高查询效率

索引的注意事项
    复合索引遵循最左前缀原则
    like查询，%号不能在前，可以做全文索引
    column is null 可以使用索引
    如果mysql估计使用索引比全文扫描更加慢，会放弃使用索引
    如果or前的条件中有列的索引，后面的没有，索引都不会被用到
    列类型是字符串的话，查询时一定要给值加引号，负责索引生效

SQL 语句的优化原则
    1.避免使用like模糊查询
    2.只列出要查询的字段，而不是所有
    3.避免使用MYSQL函数，尽量让mysql做更少的事情，减轻mysql的压力
    4.经常查询的字段，创建合适的索引，提高查询效率

什么是mysql慢查询？又该如何优化
    mysql中查询超过指定时间的语句，被称之为[慢查询]
    优化sql语句，创建合理的索引

什么是mysql死锁？如何有效降低死锁？
    死锁一般是事务相互等待对方资源，最后形成环路，而无法继续运行

    原因：
        1.系统资源不足
        2.进程运行推进的顺序不合适
        3.资源分配不当等

    如何有效降低死锁？
        1.按同一顺序访问资源
        2.避免事务中的用户交互
        3.保持事务简短并在一个批处理中
        4.使用低隔离级别
        5.使用绑定连接

死锁产生的条件
    1.互斥请求
    2.不可剥夺
    3.循环等待
    4.请求保持

执行SQL语句：select count(*) from articles 时，MyISAM和InnoDB哪个快
    MyISAM快，因为MyISAM本身就记录了数量，而InnoDB要扫描数据

隐式转换
    当查询字段是INT类型，如果查询条件为CHAR，将查询条件转换为INT,如果是字符串钱导都是数字将会进行截取，如果不是转换为0.
    当查询字段是CHAR/VARCHAR类型，如果查询条件为INT，将查询字段为换为INT再进行比较，可能会造成全表扫描






















