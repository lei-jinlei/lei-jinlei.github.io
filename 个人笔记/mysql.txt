sql规范定义的事务的隔离级别：
    1.READ UNCOMMITTED(读取未提交内容)

    2.READ COMMITTED(读取提交内容)

    3.REPEATABLE READ(可重复读)
        这是MySQL的默认事务隔离级别，它确保同一事务的多个实例在并发读取数据时，会看到同样的数据行。
        不过理论上，这会导致另一个棘手的问题：幻读 （Phantom Read）。
        简单的说，幻读指当用户读取某一范围的数据行时，另一个事务又在该范围内插入了新行，当用户再读取该范围的数据行时，会发现有新的“幻影” 行。
        InnoDB和Falcon存储引擎通过多版本并发控制（MVCC，Multiversion Concurrency Control）机制解决了该问题。

    4.SERIALIZABLE(可串行化)

mysql加锁机制
    共享锁、
        允许一个事务去读一行，阻止其他事务获得相同数据集的排它锁
    排它锁、
        允许获得排他锁的事务更新数据，阻止其他事务取得相同数据集的共享读锁和排他写锁。


mysql提供了3种事务型存储引擎
    InnDB、NDB Cluster和Falcon。

索引对性能的影响
    大大减少服务器对数据的扫描量
    帮助服务器避免排序和临时表
    将随机IO变成顺序IO
    大大提高查询速率，但会降低写的速度，并占用磁盘

索引的使用场景
    对于非常小的表，来说，大部分情况下不使用索引，全盘扫描效率会更加的高
    中到大型表，索引非常有效
    特大型的表，建立和使用索引的代价会随之增加，可以使用分区技术来解决

索引的创建原则
    最适合索引的列是出现在WHERE子句当中的列，或连接子句中的列而不是出现在SELECT关键字后的列
    索引列的基数越大，索引的效果越好
    对字符串进行索引，应制定一个前缀长度，可以节省大量的索引空间
    根据情况创建复合索引，复合索引可以提高查询效率
    避免创建过多的索引，索引会额外的占用磁盘空间，降低写操作效率
    主键尽可能选择较短的数据类型，可以有效的减少索引的磁盘占用，提高查询效率

索引的注意事项
    复合索引遵循最左前缀原则
    like查询，%号不能在前，可以做全文索引
    column is null 可以使用索引
    如果mysql估计使用索引比全文扫描更加慢，会放弃使用索引
    如果or前的条件中有列的索引，后面的没有，索引都不会被用到
    列类型是字符串的话，查询时一定要给值加引号，负责索引生效



什么是mysql慢查询？又该如何优化
    mysql中查询超过指定时间的语句，被称之为[慢查询]
    优化sql语句，创建合理的索引

执行SQL语句：select count(*) from articles 时，MyISAM和InnoDB哪个快
    MyISAM快，因为MyISAM本身就记录了数量，而InnoDB要扫描数据

隐式转换
    当查询字段是INT类型，如果查询条件为CHAR，将查询条件转换为INT,如果是字符串钱导都是数字将会进行截取，如果不是转换为0.
    当查询字段是CHAR/VARCHAR类型，如果查询条件为INT，将查询字段为换为INT再进行比较，可能会造成全表扫描






















